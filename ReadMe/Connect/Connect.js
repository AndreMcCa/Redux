/**
 *  =========== connect() ===========
 *
 * Если какой-либо компонент хочет получить доступ к store, он должен быть обернут в функцию connect(),
 * которая свяжет компонент и store. Предоставляет доступ к state и disaptch().
 * connect это HOC, он не изменяет переданный ему компонент, а возвращает новый компонент связанный с хранилищем.
 *
 */

connect(mapStateToProps, mapDispatchToProps, mergeProps, options)(Component);

/**
 * mapStateToProps(state, [ownProps]) - функция соединяющая часть состояния с пропами компонента.
 * Таким образом, связанный компонент будет иметь доступ к необходимой ему части состояния.
 *
 * - Получает state как параметр и позволяет выбрать из всего state только необходимые компоненту слайсы (части).
 * - Возвращает объект, свойства которого дополнят props компонента.
 * - Вызывается каждый раз когда хранилище обновляется.
 * - Если нет необходимости подписываться на обновления, передаем null.
 * - Если функция объявлена ​​как принимающая два параметра, первым будет передана ссылка на state, а вторым ссылка на пропы самого компонента.
 */

const mapStateToProps = (state, props) => ({
  notes: state.notes,
  currentFilter: state.filter,
});

/**
 * mapDispatchToProps(dispatch, [ownProps])- функция соединяющая отправку действий с пропами компонента.
 * Таким образом, связанный компонент сможет отправлять действия посредством вызова методов указанных в возвращаемом объекте.
 *
 * Получает ссылку на метод dispatch как параметр и позволяет объявить методы для отправки действий.
 * Возвращает объект, свойства которого дополнят props компонента.
 * Если функция объявлена ​​как принимающая два параметра, первым будет передана ссылка на dispatch,
 * а вторым ссылка на пропы самого компонента.
 *
 */

const addNote = text => ({
  type: "ADD_NOTE",
  payload: { text },
});

const mapDispatchToProps = dispatch => ({
  addNote: text => dispatch(addNote(text)),
});

// Если аргументы действия совпадают с параметрами объявляемого метода, можно вместо функции передать объект.
// В таком случае connect пройдет по ключам объекта и обернет их в dispatch.

// const addNote = text => ({
//   type: "ADD_NOTE",
//   payload: { text },
// });

// const mapDispatchToProps = { addNote };
