/**
 * Store
 * Хранилище (store) - js-объект, который содержит состояние приложения и методы доступа к нему, отправки действий и регистрации слушателей.
 *
 * - Хранит состояние (state) приложения как один объект
 * - Позволяет получить доступ к состоянию через метод getState()
 * - Напрямую состояние доступно только для чтения
 * - Единственный способ изменить состояние - отправить действие (action), объект, описывающий, что произошло
 * - Для отправки действий есть метод dispatch(action)
 * - Изменения производятся с использованием чистых функций - редюсеров (reducers), которые реагируют на действия
 * - Регистрирация слушателей делается методом subscribe(listener)
 */

import { createStore } from "redux";

createStore(reducer, [preloadedState], [enhancer]);

/**
 * reducer - функция, которая возвращает следующее дерево состояния, учитывая текущее дерево состояния и действие для обработки.
 *
 * preloadedState - начальное состояние, к примеру сериализаванное состояние последнего пользовательского сеанса.
 * Это должен быть объект той же формы, что и, как минимум, часть состояния.
 *
 * enhancer - расширяет возможности хранилища при помощи прослоек (middleware).
 */
